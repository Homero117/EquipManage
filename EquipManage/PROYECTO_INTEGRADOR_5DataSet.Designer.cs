//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EquipManage {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PROYECTO_INTEGRADOR_5DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PROYECTO_INTEGRADOR_5DataSet : global::System.Data.DataSet {
        
        private EquipoDataTable tableEquipo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public PROYECTO_INTEGRADOR_5DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected PROYECTO_INTEGRADOR_5DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Equipo"] != null)) {
                    base.Tables.Add(new EquipoDataTable(ds.Tables["Equipo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EquipoDataTable Equipo {
            get {
                return this.tableEquipo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            PROYECTO_INTEGRADOR_5DataSet cln = ((PROYECTO_INTEGRADOR_5DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Equipo"] != null)) {
                    base.Tables.Add(new EquipoDataTable(ds.Tables["Equipo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEquipo = ((EquipoDataTable)(base.Tables["Equipo"]));
            if ((initTable == true)) {
                if ((this.tableEquipo != null)) {
                    this.tableEquipo.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "PROYECTO_INTEGRADOR_5DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PROYECTO_INTEGRADOR_5DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEquipo = new EquipoDataTable();
            base.Tables.Add(this.tableEquipo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeEquipo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PROYECTO_INTEGRADOR_5DataSet ds = new PROYECTO_INTEGRADOR_5DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void EquipoRowChangeEventHandler(object sender, EquipoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EquipoDataTable : global::System.Data.TypedTableBase<EquipoRow> {
            
            private global::System.Data.DataColumn columnId_Equipo;
            
            private global::System.Data.DataColumn columnNo_Ingreso;
            
            private global::System.Data.DataColumn columnTipo_Servicio;
            
            private global::System.Data.DataColumn columnNombre_Equipo;
            
            private global::System.Data.DataColumn columnMarca;
            
            private global::System.Data.DataColumn columnCodigo_Fabricante;
            
            private global::System.Data.DataColumn columnNum_Serie;
            
            private global::System.Data.DataColumn columnIdentificacion;
            
            private global::System.Data.DataColumn columnIntervalo;
            
            private global::System.Data.DataColumn columnResolucion;
            
            private global::System.Data.DataColumn columnGrado_ClaseEscala;
            
            private global::System.Data.DataColumn columnAccesorios;
            
            private global::System.Data.DataColumn columnObservaciones;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnNo_Parte;
            
            private global::System.Data.DataColumn columnNo_Plano;
            
            private global::System.Data.DataColumn columnNo_Cotas;
            
            private global::System.Data.DataColumn columnNo_Piezas;
            
            private global::System.Data.DataColumn columnId_Foto;
            
            private global::System.Data.DataColumn columnId_Cliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoDataTable() {
                this.TableName = "Equipo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EquipoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected EquipoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Id_EquipoColumn {
                get {
                    return this.columnId_Equipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn No_IngresoColumn {
                get {
                    return this.columnNo_Ingreso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tipo_ServicioColumn {
                get {
                    return this.columnTipo_Servicio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Nombre_EquipoColumn {
                get {
                    return this.columnNombre_Equipo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarcaColumn {
                get {
                    return this.columnMarca;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Codigo_FabricanteColumn {
                get {
                    return this.columnCodigo_Fabricante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Num_SerieColumn {
                get {
                    return this.columnNum_Serie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdentificacionColumn {
                get {
                    return this.columnIdentificacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IntervaloColumn {
                get {
                    return this.columnIntervalo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ResolucionColumn {
                get {
                    return this.columnResolucion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Grado_ClaseEscalaColumn {
                get {
                    return this.columnGrado_ClaseEscala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccesoriosColumn {
                get {
                    return this.columnAccesorios;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn No_ParteColumn {
                get {
                    return this.columnNo_Parte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn No_PlanoColumn {
                get {
                    return this.columnNo_Plano;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn No_CotasColumn {
                get {
                    return this.columnNo_Cotas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn No_PiezasColumn {
                get {
                    return this.columnNo_Piezas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Id_FotoColumn {
                get {
                    return this.columnId_Foto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Id_ClienteColumn {
                get {
                    return this.columnId_Cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRow this[int index] {
                get {
                    return ((EquipoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EquipoRowChangeEventHandler EquipoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EquipoRowChangeEventHandler EquipoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EquipoRowChangeEventHandler EquipoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event EquipoRowChangeEventHandler EquipoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddEquipoRow(EquipoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRow AddEquipoRow(
                        int Id_Equipo, 
                        int No_Ingreso, 
                        string Tipo_Servicio, 
                        string Nombre_Equipo, 
                        string Marca, 
                        string Codigo_Fabricante, 
                        string Num_Serie, 
                        string Identificacion, 
                        string Intervalo, 
                        string Resolucion, 
                        string Grado_ClaseEscala, 
                        string Accesorios, 
                        string Observaciones, 
                        string Material, 
                        string No_Parte, 
                        string No_Plano, 
                        string No_Cotas, 
                        string No_Piezas, 
                        int Id_Foto, 
                        int Id_Cliente) {
                EquipoRow rowEquipoRow = ((EquipoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id_Equipo,
                        No_Ingreso,
                        Tipo_Servicio,
                        Nombre_Equipo,
                        Marca,
                        Codigo_Fabricante,
                        Num_Serie,
                        Identificacion,
                        Intervalo,
                        Resolucion,
                        Grado_ClaseEscala,
                        Accesorios,
                        Observaciones,
                        Material,
                        No_Parte,
                        No_Plano,
                        No_Cotas,
                        No_Piezas,
                        Id_Foto,
                        Id_Cliente};
                rowEquipoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEquipoRow);
                return rowEquipoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRow FindById_Equipo(int Id_Equipo) {
                return ((EquipoRow)(this.Rows.Find(new object[] {
                            Id_Equipo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EquipoDataTable cln = ((EquipoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EquipoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnId_Equipo = base.Columns["Id_Equipo"];
                this.columnNo_Ingreso = base.Columns["No_Ingreso"];
                this.columnTipo_Servicio = base.Columns["Tipo_Servicio"];
                this.columnNombre_Equipo = base.Columns["Nombre_Equipo"];
                this.columnMarca = base.Columns["Marca"];
                this.columnCodigo_Fabricante = base.Columns["Codigo_Fabricante"];
                this.columnNum_Serie = base.Columns["Num_Serie"];
                this.columnIdentificacion = base.Columns["Identificacion"];
                this.columnIntervalo = base.Columns["Intervalo"];
                this.columnResolucion = base.Columns["Resolucion"];
                this.columnGrado_ClaseEscala = base.Columns["Grado_ClaseEscala"];
                this.columnAccesorios = base.Columns["Accesorios"];
                this.columnObservaciones = base.Columns["Observaciones"];
                this.columnMaterial = base.Columns["Material"];
                this.columnNo_Parte = base.Columns["No_Parte"];
                this.columnNo_Plano = base.Columns["No_Plano"];
                this.columnNo_Cotas = base.Columns["No_Cotas"];
                this.columnNo_Piezas = base.Columns["No_Piezas"];
                this.columnId_Foto = base.Columns["Id_Foto"];
                this.columnId_Cliente = base.Columns["Id_Cliente"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnId_Equipo = new global::System.Data.DataColumn("Id_Equipo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Equipo);
                this.columnNo_Ingreso = new global::System.Data.DataColumn("No_Ingreso", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Ingreso);
                this.columnTipo_Servicio = new global::System.Data.DataColumn("Tipo_Servicio", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTipo_Servicio);
                this.columnNombre_Equipo = new global::System.Data.DataColumn("Nombre_Equipo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre_Equipo);
                this.columnMarca = new global::System.Data.DataColumn("Marca", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarca);
                this.columnCodigo_Fabricante = new global::System.Data.DataColumn("Codigo_Fabricante", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo_Fabricante);
                this.columnNum_Serie = new global::System.Data.DataColumn("Num_Serie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum_Serie);
                this.columnIdentificacion = new global::System.Data.DataColumn("Identificacion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentificacion);
                this.columnIntervalo = new global::System.Data.DataColumn("Intervalo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntervalo);
                this.columnResolucion = new global::System.Data.DataColumn("Resolucion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResolucion);
                this.columnGrado_ClaseEscala = new global::System.Data.DataColumn("Grado_ClaseEscala", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrado_ClaseEscala);
                this.columnAccesorios = new global::System.Data.DataColumn("Accesorios", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccesorios);
                this.columnObservaciones = new global::System.Data.DataColumn("Observaciones", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservaciones);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnNo_Parte = new global::System.Data.DataColumn("No_Parte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Parte);
                this.columnNo_Plano = new global::System.Data.DataColumn("No_Plano", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Plano);
                this.columnNo_Cotas = new global::System.Data.DataColumn("No_Cotas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Cotas);
                this.columnNo_Piezas = new global::System.Data.DataColumn("No_Piezas", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Piezas);
                this.columnId_Foto = new global::System.Data.DataColumn("Id_Foto", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Foto);
                this.columnId_Cliente = new global::System.Data.DataColumn("Id_Cliente", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId_Cliente);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId_Equipo}, true));
                this.columnId_Equipo.AllowDBNull = false;
                this.columnId_Equipo.Unique = true;
                this.columnNo_Ingreso.AllowDBNull = false;
                this.columnTipo_Servicio.AllowDBNull = false;
                this.columnTipo_Servicio.MaxLength = 100;
                this.columnNombre_Equipo.AllowDBNull = false;
                this.columnNombre_Equipo.MaxLength = 100;
                this.columnMarca.AllowDBNull = false;
                this.columnMarca.MaxLength = 100;
                this.columnCodigo_Fabricante.AllowDBNull = false;
                this.columnCodigo_Fabricante.MaxLength = 50;
                this.columnNum_Serie.AllowDBNull = false;
                this.columnNum_Serie.MaxLength = 50;
                this.columnIdentificacion.AllowDBNull = false;
                this.columnIdentificacion.MaxLength = 50;
                this.columnIntervalo.AllowDBNull = false;
                this.columnIntervalo.MaxLength = 100;
                this.columnResolucion.MaxLength = 100;
                this.columnGrado_ClaseEscala.MaxLength = 100;
                this.columnAccesorios.MaxLength = 100;
                this.columnObservaciones.AllowDBNull = false;
                this.columnObservaciones.MaxLength = 200;
                this.columnMaterial.AllowDBNull = false;
                this.columnMaterial.MaxLength = 50;
                this.columnNo_Parte.AllowDBNull = false;
                this.columnNo_Parte.MaxLength = 50;
                this.columnNo_Plano.AllowDBNull = false;
                this.columnNo_Plano.MaxLength = 50;
                this.columnNo_Cotas.AllowDBNull = false;
                this.columnNo_Cotas.MaxLength = 50;
                this.columnNo_Piezas.AllowDBNull = false;
                this.columnNo_Piezas.MaxLength = 50;
                this.columnId_Foto.AllowDBNull = false;
                this.columnId_Cliente.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRow NewEquipoRow() {
                return ((EquipoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EquipoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EquipoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EquipoRowChanged != null)) {
                    this.EquipoRowChanged(this, new EquipoRowChangeEvent(((EquipoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EquipoRowChanging != null)) {
                    this.EquipoRowChanging(this, new EquipoRowChangeEvent(((EquipoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EquipoRowDeleted != null)) {
                    this.EquipoRowDeleted(this, new EquipoRowChangeEvent(((EquipoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EquipoRowDeleting != null)) {
                    this.EquipoRowDeleting(this, new EquipoRowChangeEvent(((EquipoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveEquipoRow(EquipoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PROYECTO_INTEGRADOR_5DataSet ds = new PROYECTO_INTEGRADOR_5DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EquipoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EquipoRow : global::System.Data.DataRow {
            
            private EquipoDataTable tableEquipo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal EquipoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEquipo = ((EquipoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id_Equipo {
                get {
                    return ((int)(this[this.tableEquipo.Id_EquipoColumn]));
                }
                set {
                    this[this.tableEquipo.Id_EquipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int No_Ingreso {
                get {
                    return ((int)(this[this.tableEquipo.No_IngresoColumn]));
                }
                set {
                    this[this.tableEquipo.No_IngresoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Tipo_Servicio {
                get {
                    return ((string)(this[this.tableEquipo.Tipo_ServicioColumn]));
                }
                set {
                    this[this.tableEquipo.Tipo_ServicioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Nombre_Equipo {
                get {
                    return ((string)(this[this.tableEquipo.Nombre_EquipoColumn]));
                }
                set {
                    this[this.tableEquipo.Nombre_EquipoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Marca {
                get {
                    return ((string)(this[this.tableEquipo.MarcaColumn]));
                }
                set {
                    this[this.tableEquipo.MarcaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Codigo_Fabricante {
                get {
                    return ((string)(this[this.tableEquipo.Codigo_FabricanteColumn]));
                }
                set {
                    this[this.tableEquipo.Codigo_FabricanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Num_Serie {
                get {
                    return ((string)(this[this.tableEquipo.Num_SerieColumn]));
                }
                set {
                    this[this.tableEquipo.Num_SerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Identificacion {
                get {
                    return ((string)(this[this.tableEquipo.IdentificacionColumn]));
                }
                set {
                    this[this.tableEquipo.IdentificacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Intervalo {
                get {
                    return ((string)(this[this.tableEquipo.IntervaloColumn]));
                }
                set {
                    this[this.tableEquipo.IntervaloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Resolucion {
                get {
                    try {
                        return ((string)(this[this.tableEquipo.ResolucionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Resolucion\' de la tabla \'Equipo\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipo.ResolucionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Grado_ClaseEscala {
                get {
                    try {
                        return ((string)(this[this.tableEquipo.Grado_ClaseEscalaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Grado_ClaseEscala\' de la tabla \'Equipo\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipo.Grado_ClaseEscalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Accesorios {
                get {
                    try {
                        return ((string)(this[this.tableEquipo.AccesoriosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'Accesorios\' de la tabla \'Equipo\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipo.AccesoriosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Observaciones {
                get {
                    return ((string)(this[this.tableEquipo.ObservacionesColumn]));
                }
                set {
                    this[this.tableEquipo.ObservacionesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Material {
                get {
                    return ((string)(this[this.tableEquipo.MaterialColumn]));
                }
                set {
                    this[this.tableEquipo.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string No_Parte {
                get {
                    return ((string)(this[this.tableEquipo.No_ParteColumn]));
                }
                set {
                    this[this.tableEquipo.No_ParteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string No_Plano {
                get {
                    return ((string)(this[this.tableEquipo.No_PlanoColumn]));
                }
                set {
                    this[this.tableEquipo.No_PlanoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string No_Cotas {
                get {
                    return ((string)(this[this.tableEquipo.No_CotasColumn]));
                }
                set {
                    this[this.tableEquipo.No_CotasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string No_Piezas {
                get {
                    return ((string)(this[this.tableEquipo.No_PiezasColumn]));
                }
                set {
                    this[this.tableEquipo.No_PiezasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id_Foto {
                get {
                    return ((int)(this[this.tableEquipo.Id_FotoColumn]));
                }
                set {
                    this[this.tableEquipo.Id_FotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Id_Cliente {
                get {
                    return ((int)(this[this.tableEquipo.Id_ClienteColumn]));
                }
                set {
                    this[this.tableEquipo.Id_ClienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResolucionNull() {
                return this.IsNull(this.tableEquipo.ResolucionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResolucionNull() {
                this[this.tableEquipo.ResolucionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGrado_ClaseEscalaNull() {
                return this.IsNull(this.tableEquipo.Grado_ClaseEscalaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGrado_ClaseEscalaNull() {
                this[this.tableEquipo.Grado_ClaseEscalaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccesoriosNull() {
                return this.IsNull(this.tableEquipo.AccesoriosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccesoriosNull() {
                this[this.tableEquipo.AccesoriosColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class EquipoRowChangeEvent : global::System.EventArgs {
            
            private EquipoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRowChangeEvent(EquipoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public EquipoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EquipManage.PROYECTO_INTEGRADOR_5DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EquipoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public EquipoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Equipo";
            tableMapping.ColumnMappings.Add("Id_Equipo", "Id_Equipo");
            tableMapping.ColumnMappings.Add("No_Ingreso", "No_Ingreso");
            tableMapping.ColumnMappings.Add("Tipo_Servicio", "Tipo_Servicio");
            tableMapping.ColumnMappings.Add("Nombre_Equipo", "Nombre_Equipo");
            tableMapping.ColumnMappings.Add("Marca", "Marca");
            tableMapping.ColumnMappings.Add("Codigo_Fabricante", "Codigo_Fabricante");
            tableMapping.ColumnMappings.Add("Num_Serie", "Num_Serie");
            tableMapping.ColumnMappings.Add("Identificacion", "Identificacion");
            tableMapping.ColumnMappings.Add("Intervalo", "Intervalo");
            tableMapping.ColumnMappings.Add("Resolucion", "Resolucion");
            tableMapping.ColumnMappings.Add("Grado_ClaseEscala", "Grado_ClaseEscala");
            tableMapping.ColumnMappings.Add("Accesorios", "Accesorios");
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones");
            tableMapping.ColumnMappings.Add("Material", "Material");
            tableMapping.ColumnMappings.Add("No_Parte", "No_Parte");
            tableMapping.ColumnMappings.Add("No_Plano", "No_Plano");
            tableMapping.ColumnMappings.Add("No_Cotas", "No_Cotas");
            tableMapping.ColumnMappings.Add("No_Piezas", "No_Piezas");
            tableMapping.ColumnMappings.Add("Id_Foto", "Id_Foto");
            tableMapping.ColumnMappings.Add("Id_Cliente", "Id_Cliente");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Equipo] WHERE (([Id_Equipo] = @Original_Id_Equipo) AND ([No_Ingreso] = @Original_No_Ingreso) AND ([Tipo_Servicio] = @Original_Tipo_Servicio) AND ([Nombre_Equipo] = @Original_Nombre_Equipo) AND ([Marca] = @Original_Marca) AND ([Codigo_Fabricante] = @Original_Codigo_Fabricante) AND ([Num_Serie] = @Original_Num_Serie) AND ([Identificacion] = @Original_Identificacion) AND ([Intervalo] = @Original_Intervalo) AND ((@IsNull_Resolucion = 1 AND [Resolucion] IS NULL) OR ([Resolucion] = @Original_Resolucion)) AND ((@IsNull_Grado_ClaseEscala = 1 AND [Grado_ClaseEscala] IS NULL) OR ([Grado_ClaseEscala] = @Original_Grado_ClaseEscala)) AND ((@IsNull_Accesorios = 1 AND [Accesorios] IS NULL) OR ([Accesorios] = @Original_Accesorios)) AND ([Observaciones] = @Original_Observaciones) AND ([Material] = @Original_Material) AND ([No_Parte] = @Original_No_Parte) AND ([No_Plano] = @Original_No_Plano) AND ([No_Cotas] = @Original_No_Cotas) AND ([No_Piezas] = @Original_No_Piezas) AND ([Id_Foto] = @Original_Id_Foto) AND ([Id_Cliente] = @Original_Id_Cliente))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Equipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Equipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Ingreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Ingreso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_Servicio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Servicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_Equipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_Equipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_Fabricante", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_Fabricante", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Identificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Identificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Intervalo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Intervalo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Resolucion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolucion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Grado_ClaseEscala", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Grado_ClaseEscala", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Accesorios", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Accesorios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observaciones", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Material", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Material", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Parte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Parte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Plano", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Plano", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Cotas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cotas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Piezas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Piezas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Foto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Foto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Equipo] ([Id_Equipo], [No_Ingreso], [Tipo_Servicio], [Nombre_Equipo], [Marca], [Codigo_Fabricante], [Num_Serie], [Identificacion], [Intervalo], [Resolucion], [Grado_ClaseEscala], [Accesorios], [Observaciones], [Material], [No_Parte], [No_Plano], [No_Cotas], [No_Piezas], [Id_Foto], [Id_Cliente]) VALUES (@Id_Equipo, @No_Ingreso, @Tipo_Servicio, @Nombre_Equipo, @Marca, @Codigo_Fabricante, @Num_Serie, @Identificacion, @Intervalo, @Resolucion, @Grado_ClaseEscala, @Accesorios, @Observaciones, @Material, @No_Parte, @No_Plano, @No_Cotas, @No_Piezas, @Id_Foto, @Id_Cliente);
SELECT Id_Equipo, No_Ingreso, Tipo_Servicio, Nombre_Equipo, Marca, Codigo_Fabricante, Num_Serie, Identificacion, Intervalo, Resolucion, Grado_ClaseEscala, Accesorios, Observaciones, Material, No_Parte, No_Plano, No_Cotas, No_Piezas, Id_Foto, Id_Cliente FROM Equipo WHERE (Id_Equipo = @Id_Equipo)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Equipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Equipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Ingreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Ingreso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Servicio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Servicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_Equipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_Equipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_Fabricante", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_Fabricante", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Identificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Identificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Intervalo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Intervalo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolucion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grado_ClaseEscala", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accesorios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observaciones", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Material", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Material", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Parte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Parte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Plano", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Plano", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Cotas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cotas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Piezas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Piezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Foto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Foto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Equipo] SET [Id_Equipo] = @Id_Equipo, [No_Ingreso] = @No_Ingreso, [" +
                "Tipo_Servicio] = @Tipo_Servicio, [Nombre_Equipo] = @Nombre_Equipo, [Marca] = @Ma" +
                "rca, [Codigo_Fabricante] = @Codigo_Fabricante, [Num_Serie] = @Num_Serie, [Identi" +
                "ficacion] = @Identificacion, [Intervalo] = @Intervalo, [Resolucion] = @Resolucio" +
                "n, [Grado_ClaseEscala] = @Grado_ClaseEscala, [Accesorios] = @Accesorios, [Observ" +
                "aciones] = @Observaciones, [Material] = @Material, [No_Parte] = @No_Parte, [No_P" +
                "lano] = @No_Plano, [No_Cotas] = @No_Cotas, [No_Piezas] = @No_Piezas, [Id_Foto] =" +
                " @Id_Foto, [Id_Cliente] = @Id_Cliente WHERE (([Id_Equipo] = @Original_Id_Equipo)" +
                " AND ([No_Ingreso] = @Original_No_Ingreso) AND ([Tipo_Servicio] = @Original_Tipo" +
                "_Servicio) AND ([Nombre_Equipo] = @Original_Nombre_Equipo) AND ([Marca] = @Origi" +
                "nal_Marca) AND ([Codigo_Fabricante] = @Original_Codigo_Fabricante) AND ([Num_Ser" +
                "ie] = @Original_Num_Serie) AND ([Identificacion] = @Original_Identificacion) AND" +
                " ([Intervalo] = @Original_Intervalo) AND ((@IsNull_Resolucion = 1 AND [Resolucio" +
                "n] IS NULL) OR ([Resolucion] = @Original_Resolucion)) AND ((@IsNull_Grado_ClaseE" +
                "scala = 1 AND [Grado_ClaseEscala] IS NULL) OR ([Grado_ClaseEscala] = @Original_G" +
                "rado_ClaseEscala)) AND ((@IsNull_Accesorios = 1 AND [Accesorios] IS NULL) OR ([A" +
                "ccesorios] = @Original_Accesorios)) AND ([Observaciones] = @Original_Observacion" +
                "es) AND ([Material] = @Original_Material) AND ([No_Parte] = @Original_No_Parte) " +
                "AND ([No_Plano] = @Original_No_Plano) AND ([No_Cotas] = @Original_No_Cotas) AND " +
                "([No_Piezas] = @Original_No_Piezas) AND ([Id_Foto] = @Original_Id_Foto) AND ([Id" +
                "_Cliente] = @Original_Id_Cliente));\r\nSELECT Id_Equipo, No_Ingreso, Tipo_Servicio" +
                ", Nombre_Equipo, Marca, Codigo_Fabricante, Num_Serie, Identificacion, Intervalo," +
                " Resolucion, Grado_ClaseEscala, Accesorios, Observaciones, Material, No_Parte, N" +
                "o_Plano, No_Cotas, No_Piezas, Id_Foto, Id_Cliente FROM Equipo WHERE (Id_Equipo =" +
                " @Id_Equipo)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Equipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Equipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Ingreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Ingreso", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tipo_Servicio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Servicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre_Equipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_Equipo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo_Fabricante", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_Fabricante", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Num_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_Serie", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Identificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Identificacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Intervalo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Intervalo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Resolucion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Grado_ClaseEscala", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Accesorios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Observaciones", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observaciones", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Material", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Material", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Parte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Parte", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Plano", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Plano", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Cotas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cotas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Piezas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Piezas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Foto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Foto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id_Cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Equipo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Equipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Ingreso", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Ingreso", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tipo_Servicio", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tipo_Servicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre_Equipo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre_Equipo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Marca", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Marca", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo_Fabricante", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo_Fabricante", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Num_Serie", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Num_Serie", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Identificacion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Identificacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Intervalo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Intervalo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Resolucion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Resolucion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Resolucion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Grado_ClaseEscala", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Grado_ClaseEscala", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Grado_ClaseEscala", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Accesorios", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Accesorios", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Accesorios", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Observaciones", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Observaciones", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Material", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Material", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Parte", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Parte", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Plano", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Plano", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Cotas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cotas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Piezas", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Piezas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Foto", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Foto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id_Cliente", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::EquipManage.Properties.Settings.Default.PROYECTO_INTEGRADOR_5ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Id_Equipo, No_Ingreso, Tipo_Servicio, Nombre_Equipo, Marca, Codigo_Fabricante, Num_Serie, Identificacion, Intervalo, Resolucion, Grado_ClaseEscala, Accesorios, Observaciones, Material, No_Parte, No_Plano, No_Cotas, No_Piezas, Id_Foto, Id_Cliente FROM dbo.Equipo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PROYECTO_INTEGRADOR_5DataSet.EquipoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PROYECTO_INTEGRADOR_5DataSet.EquipoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PROYECTO_INTEGRADOR_5DataSet.EquipoDataTable dataTable = new PROYECTO_INTEGRADOR_5DataSet.EquipoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PROYECTO_INTEGRADOR_5DataSet.EquipoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PROYECTO_INTEGRADOR_5DataSet dataSet) {
            return this.Adapter.Update(dataSet, "Equipo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Id_Equipo, 
                    int Original_No_Ingreso, 
                    string Original_Tipo_Servicio, 
                    string Original_Nombre_Equipo, 
                    string Original_Marca, 
                    string Original_Codigo_Fabricante, 
                    string Original_Num_Serie, 
                    string Original_Identificacion, 
                    string Original_Intervalo, 
                    string Original_Resolucion, 
                    string Original_Grado_ClaseEscala, 
                    string Original_Accesorios, 
                    string Original_Observaciones, 
                    string Original_Material, 
                    string Original_No_Parte, 
                    string Original_No_Plano, 
                    string Original_No_Cotas, 
                    string Original_No_Piezas, 
                    int Original_Id_Foto, 
                    int Original_Id_Cliente) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id_Equipo));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_No_Ingreso));
            if ((Original_Tipo_Servicio == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo_Servicio");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Tipo_Servicio));
            }
            if ((Original_Nombre_Equipo == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_Equipo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Nombre_Equipo));
            }
            if ((Original_Marca == null)) {
                throw new global::System.ArgumentNullException("Original_Marca");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Marca));
            }
            if ((Original_Codigo_Fabricante == null)) {
                throw new global::System.ArgumentNullException("Original_Codigo_Fabricante");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Codigo_Fabricante));
            }
            if ((Original_Num_Serie == null)) {
                throw new global::System.ArgumentNullException("Original_Num_Serie");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Num_Serie));
            }
            if ((Original_Identificacion == null)) {
                throw new global::System.ArgumentNullException("Original_Identificacion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Identificacion));
            }
            if ((Original_Intervalo == null)) {
                throw new global::System.ArgumentNullException("Original_Intervalo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Intervalo));
            }
            if ((Original_Resolucion == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Resolucion));
            }
            if ((Original_Grado_ClaseEscala == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Grado_ClaseEscala));
            }
            if ((Original_Accesorios == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Accesorios));
            }
            if ((Original_Observaciones == null)) {
                throw new global::System.ArgumentNullException("Original_Observaciones");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Observaciones));
            }
            if ((Original_Material == null)) {
                throw new global::System.ArgumentNullException("Original_Material");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Material));
            }
            if ((Original_No_Parte == null)) {
                throw new global::System.ArgumentNullException("Original_No_Parte");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_No_Parte));
            }
            if ((Original_No_Plano == null)) {
                throw new global::System.ArgumentNullException("Original_No_Plano");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_No_Plano));
            }
            if ((Original_No_Cotas == null)) {
                throw new global::System.ArgumentNullException("Original_No_Cotas");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_No_Cotas));
            }
            if ((Original_No_Piezas == null)) {
                throw new global::System.ArgumentNullException("Original_No_Piezas");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_No_Piezas));
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((int)(Original_Id_Foto));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_Id_Cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int Id_Equipo, 
                    int No_Ingreso, 
                    string Tipo_Servicio, 
                    string Nombre_Equipo, 
                    string Marca, 
                    string Codigo_Fabricante, 
                    string Num_Serie, 
                    string Identificacion, 
                    string Intervalo, 
                    string Resolucion, 
                    string Grado_ClaseEscala, 
                    string Accesorios, 
                    string Observaciones, 
                    string Material, 
                    string No_Parte, 
                    string No_Plano, 
                    string No_Cotas, 
                    string No_Piezas, 
                    int Id_Foto, 
                    int Id_Cliente) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Id_Equipo));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(No_Ingreso));
            if ((Tipo_Servicio == null)) {
                throw new global::System.ArgumentNullException("Tipo_Servicio");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Tipo_Servicio));
            }
            if ((Nombre_Equipo == null)) {
                throw new global::System.ArgumentNullException("Nombre_Equipo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Nombre_Equipo));
            }
            if ((Marca == null)) {
                throw new global::System.ArgumentNullException("Marca");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Marca));
            }
            if ((Codigo_Fabricante == null)) {
                throw new global::System.ArgumentNullException("Codigo_Fabricante");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Codigo_Fabricante));
            }
            if ((Num_Serie == null)) {
                throw new global::System.ArgumentNullException("Num_Serie");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Num_Serie));
            }
            if ((Identificacion == null)) {
                throw new global::System.ArgumentNullException("Identificacion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Identificacion));
            }
            if ((Intervalo == null)) {
                throw new global::System.ArgumentNullException("Intervalo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Intervalo));
            }
            if ((Resolucion == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Resolucion));
            }
            if ((Grado_ClaseEscala == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Grado_ClaseEscala));
            }
            if ((Accesorios == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Accesorios));
            }
            if ((Observaciones == null)) {
                throw new global::System.ArgumentNullException("Observaciones");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Observaciones));
            }
            if ((Material == null)) {
                throw new global::System.ArgumentNullException("Material");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Material));
            }
            if ((No_Parte == null)) {
                throw new global::System.ArgumentNullException("No_Parte");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(No_Parte));
            }
            if ((No_Plano == null)) {
                throw new global::System.ArgumentNullException("No_Plano");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(No_Plano));
            }
            if ((No_Cotas == null)) {
                throw new global::System.ArgumentNullException("No_Cotas");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(No_Cotas));
            }
            if ((No_Piezas == null)) {
                throw new global::System.ArgumentNullException("No_Piezas");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(No_Piezas));
            }
            this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Id_Foto));
            this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Id_Cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int Id_Equipo, 
                    int No_Ingreso, 
                    string Tipo_Servicio, 
                    string Nombre_Equipo, 
                    string Marca, 
                    string Codigo_Fabricante, 
                    string Num_Serie, 
                    string Identificacion, 
                    string Intervalo, 
                    string Resolucion, 
                    string Grado_ClaseEscala, 
                    string Accesorios, 
                    string Observaciones, 
                    string Material, 
                    string No_Parte, 
                    string No_Plano, 
                    string No_Cotas, 
                    string No_Piezas, 
                    int Id_Foto, 
                    int Id_Cliente, 
                    int Original_Id_Equipo, 
                    int Original_No_Ingreso, 
                    string Original_Tipo_Servicio, 
                    string Original_Nombre_Equipo, 
                    string Original_Marca, 
                    string Original_Codigo_Fabricante, 
                    string Original_Num_Serie, 
                    string Original_Identificacion, 
                    string Original_Intervalo, 
                    string Original_Resolucion, 
                    string Original_Grado_ClaseEscala, 
                    string Original_Accesorios, 
                    string Original_Observaciones, 
                    string Original_Material, 
                    string Original_No_Parte, 
                    string Original_No_Plano, 
                    string Original_No_Cotas, 
                    string Original_No_Piezas, 
                    int Original_Id_Foto, 
                    int Original_Id_Cliente) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Id_Equipo));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(No_Ingreso));
            if ((Tipo_Servicio == null)) {
                throw new global::System.ArgumentNullException("Tipo_Servicio");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Tipo_Servicio));
            }
            if ((Nombre_Equipo == null)) {
                throw new global::System.ArgumentNullException("Nombre_Equipo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Nombre_Equipo));
            }
            if ((Marca == null)) {
                throw new global::System.ArgumentNullException("Marca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Marca));
            }
            if ((Codigo_Fabricante == null)) {
                throw new global::System.ArgumentNullException("Codigo_Fabricante");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Codigo_Fabricante));
            }
            if ((Num_Serie == null)) {
                throw new global::System.ArgumentNullException("Num_Serie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Num_Serie));
            }
            if ((Identificacion == null)) {
                throw new global::System.ArgumentNullException("Identificacion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Identificacion));
            }
            if ((Intervalo == null)) {
                throw new global::System.ArgumentNullException("Intervalo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Intervalo));
            }
            if ((Resolucion == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Resolucion));
            }
            if ((Grado_ClaseEscala == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Grado_ClaseEscala));
            }
            if ((Accesorios == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Accesorios));
            }
            if ((Observaciones == null)) {
                throw new global::System.ArgumentNullException("Observaciones");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Observaciones));
            }
            if ((Material == null)) {
                throw new global::System.ArgumentNullException("Material");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Material));
            }
            if ((No_Parte == null)) {
                throw new global::System.ArgumentNullException("No_Parte");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(No_Parte));
            }
            if ((No_Plano == null)) {
                throw new global::System.ArgumentNullException("No_Plano");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(No_Plano));
            }
            if ((No_Cotas == null)) {
                throw new global::System.ArgumentNullException("No_Cotas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(No_Cotas));
            }
            if ((No_Piezas == null)) {
                throw new global::System.ArgumentNullException("No_Piezas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(No_Piezas));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Id_Foto));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Id_Cliente));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Id_Equipo));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_No_Ingreso));
            if ((Original_Tipo_Servicio == null)) {
                throw new global::System.ArgumentNullException("Original_Tipo_Servicio");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Tipo_Servicio));
            }
            if ((Original_Nombre_Equipo == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre_Equipo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Nombre_Equipo));
            }
            if ((Original_Marca == null)) {
                throw new global::System.ArgumentNullException("Original_Marca");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Marca));
            }
            if ((Original_Codigo_Fabricante == null)) {
                throw new global::System.ArgumentNullException("Original_Codigo_Fabricante");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Codigo_Fabricante));
            }
            if ((Original_Num_Serie == null)) {
                throw new global::System.ArgumentNullException("Original_Num_Serie");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Num_Serie));
            }
            if ((Original_Identificacion == null)) {
                throw new global::System.ArgumentNullException("Original_Identificacion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Identificacion));
            }
            if ((Original_Intervalo == null)) {
                throw new global::System.ArgumentNullException("Original_Intervalo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_Intervalo));
            }
            if ((Original_Resolucion == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Resolucion));
            }
            if ((Original_Grado_ClaseEscala == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Grado_ClaseEscala));
            }
            if ((Original_Accesorios == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Accesorios));
            }
            if ((Original_Observaciones == null)) {
                throw new global::System.ArgumentNullException("Original_Observaciones");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Observaciones));
            }
            if ((Original_Material == null)) {
                throw new global::System.ArgumentNullException("Original_Material");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Material));
            }
            if ((Original_No_Parte == null)) {
                throw new global::System.ArgumentNullException("Original_No_Parte");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_No_Parte));
            }
            if ((Original_No_Plano == null)) {
                throw new global::System.ArgumentNullException("Original_No_Plano");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_No_Plano));
            }
            if ((Original_No_Cotas == null)) {
                throw new global::System.ArgumentNullException("Original_No_Cotas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_No_Cotas));
            }
            if ((Original_No_Piezas == null)) {
                throw new global::System.ArgumentNullException("Original_No_Piezas");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_No_Piezas));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_Id_Foto));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_Id_Cliente));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int No_Ingreso, 
                    string Tipo_Servicio, 
                    string Nombre_Equipo, 
                    string Marca, 
                    string Codigo_Fabricante, 
                    string Num_Serie, 
                    string Identificacion, 
                    string Intervalo, 
                    string Resolucion, 
                    string Grado_ClaseEscala, 
                    string Accesorios, 
                    string Observaciones, 
                    string Material, 
                    string No_Parte, 
                    string No_Plano, 
                    string No_Cotas, 
                    string No_Piezas, 
                    int Id_Foto, 
                    int Id_Cliente, 
                    int Original_Id_Equipo, 
                    int Original_No_Ingreso, 
                    string Original_Tipo_Servicio, 
                    string Original_Nombre_Equipo, 
                    string Original_Marca, 
                    string Original_Codigo_Fabricante, 
                    string Original_Num_Serie, 
                    string Original_Identificacion, 
                    string Original_Intervalo, 
                    string Original_Resolucion, 
                    string Original_Grado_ClaseEscala, 
                    string Original_Accesorios, 
                    string Original_Observaciones, 
                    string Original_Material, 
                    string Original_No_Parte, 
                    string Original_No_Plano, 
                    string Original_No_Cotas, 
                    string Original_No_Piezas, 
                    int Original_Id_Foto, 
                    int Original_Id_Cliente) {
            return this.Update(Original_Id_Equipo, No_Ingreso, Tipo_Servicio, Nombre_Equipo, Marca, Codigo_Fabricante, Num_Serie, Identificacion, Intervalo, Resolucion, Grado_ClaseEscala, Accesorios, Observaciones, Material, No_Parte, No_Plano, No_Cotas, No_Piezas, Id_Foto, Id_Cliente, Original_Id_Equipo, Original_No_Ingreso, Original_Tipo_Servicio, Original_Nombre_Equipo, Original_Marca, Original_Codigo_Fabricante, Original_Num_Serie, Original_Identificacion, Original_Intervalo, Original_Resolucion, Original_Grado_ClaseEscala, Original_Accesorios, Original_Observaciones, Original_Material, Original_No_Parte, Original_No_Plano, Original_No_Cotas, Original_No_Piezas, Original_Id_Foto, Original_Id_Cliente);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EquipoTableAdapter _equipoTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EquipoTableAdapter EquipoTableAdapter {
            get {
                return this._equipoTableAdapter;
            }
            set {
                this._equipoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._equipoTableAdapter != null) 
                            && (this._equipoTableAdapter.Connection != null))) {
                    return this._equipoTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._equipoTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(PROYECTO_INTEGRADOR_5DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._equipoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Equipo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._equipoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(PROYECTO_INTEGRADOR_5DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._equipoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Equipo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._equipoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(PROYECTO_INTEGRADOR_5DataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._equipoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Equipo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._equipoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(PROYECTO_INTEGRADOR_5DataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._equipoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._equipoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi" +
                        "sma cadena de conexión.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" +
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" +
                        "n las transacciones o el estado actual no permite que comience la transacción.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._equipoTableAdapter != null)) {
                    revertConnections.Add(this._equipoTableAdapter, this._equipoTableAdapter.Connection);
                    this._equipoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._equipoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._equipoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._equipoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._equipoTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._equipoTableAdapter != null)) {
                    this._equipoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._equipoTableAdapter]));
                    this._equipoTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591